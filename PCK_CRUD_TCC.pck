CREATE OR REPLACE PACKAGE TCC.PCK_CRUD_TCC
AS
										
	PROCEDURE insertar_despacho (P_FECHA_CREACION IN DATE,
								P_CIUDAD_ORIGEN IN NUMBER,
								P_CIUDAD_DESTINO IN NUMBER,
								P_DIRECCION_REMITENTE IN VARCHAR2,
								P_DIRECCION_DESTINATARIO IN VARCHAR2,
								P_DOCUMENTO_REMITENTE IN VARCHAR2,
								P_DOCUMENTO_DESTINATARIO IN VARCHAR2,
								P_NOMBRE_REMITENTE IN VARCHAR2,
								P_NOMBRE_DESTINATARIO IN VARCHAR2,
								P_CEL_REMITENTE IN VARCHAR2,
								P_CEL_DESTINATARIO IN VARCHAR2,
								P_ID_MERCANCIA IN NUMBER,
								P_NUMERO_ENVIO IN VARCHAR2,
								P_DOCUMENTO IN VARCHAR2,
								P_ID_ESTADO IN NUMBER);

	PROCEDURE getEstado(P_ID_ESTADO IN NUMBER, P_NOMBRE_ESTADO OUT VARCHAR2);
	
	PROCEDURE getEstados(P_ESTADOS OUT SYS_REFCURSOR);

	PROCEDURE getDespachos(P_DOCUMENTO IN NUMBER DEFAULT NULL, P_NUMERO_ENVIO IN VARCHAR2 DEFAULT NULL, P_DESPACHOS OUT SYS_REFCURSOR);

-- Package header
END PCK_CRUD_TCC;

CREATE OR REPLACE PACKAGE BODY TCC.PCK_CRUD_TCC
AS

/**
 * INSERTA UN REGISTRO EN LA TABLA DESPACHO
 */
PROCEDURE insertar_despacho (P_FECHA_CREACION IN DATE,
						     P_CIUDAD_ORIGEN IN NUMBER, 
						     P_CIUDAD_DESTINO IN NUMBER,
						     P_DIRECCION_REMITENTE IN VARCHAR2,
						     P_DIRECCION_DESTINATARIO IN VARCHAR2,
 						     P_DOCUMENTO_REMITENTE IN VARCHAR2,
						     P_DOCUMENTO_DESTINATARIO IN VARCHAR2,
						     P_NOMBRE_REMITENTE IN VARCHAR2,
						     P_NOMBRE_DESTINATARIO IN VARCHAR2,
						     P_CEL_REMITENTE IN VARCHAR2,
						     P_CEL_DESTINATARIO IN VARCHAR2,
						     P_ID_MERCANCIA IN NUMBER,
						     P_NUMERO_ENVIO IN VARCHAR2,
						     P_DOCUMENTO IN VARCHAR2,
						     P_ID_ESTADO IN NUMBER)
IS

    v_sql_despacho VARCHAR2(600);
BEGIN

	v_sql_despacho := 'INSERT INTO TCC.DESPACHO  ' ||
         '(ID_DESPACHO, FECHA_CREACION, CIUDAD_ORIGEN, CIUDAD_DESTINO, DIRECCION_REMITENTE, DIRECCION_DESTINATARIO, DOCUMENTO_REMITENTE, DOCUMENTO_DESTINATARIO, NOMBRE_REMITENTE, ' ||
         ' NOMBRE_DESTINATARIO, CEL_REMITENTE, CEL_DESTINATARIO, ID_MERCANCIA, NUMERO_ENVIO, DOCUMENTO, ID_ESTADO) ' ||
         'VALUES (:P_FECHA_CREACION, :P_CIUDAD_ORIGEN, :P_CIUDAD_DESTINO, :P_DIRECCION_REMITENTE, :P_DIRECCION_DESTINATARIO, :P_DOCUMENTO_REMITENTE, :P_DOCUMENTO_DESTINATARIO, ' ||
		 ':P_NOMBRE_REMITENTE, :P_NOMBRE_DESTINATARIO, :P_CEL_REMITENTE, :P_CEL_DESTINATARIO, :P_ID_MERCANCIA, :P_NUMERO_ENVIO, :P_DOCUMENTO, :P_ID_ESTADO)';

        
    EXECUTE IMMEDIATE v_sql_despacho
      USING IN "TCC"."ISEQ$$_70748".nextval, 
 			   P_FECHA_CREACION, 
 			   P_CIUDAD_DESTINO, 
 			   P_DIRECCION_REMITENTE, 
 			   P_DIRECCION_DESTINATARIO,
 			   P_DOCUMENTO_REMITENTE,
 			   P_DOCUMENTO_DESTINATARIO,
 			   P_NOMBRE_REMITENTE,
 			   P_NOMBRE_DESTINATARIO,
 			   P_CEL_REMITENTE,
 			   P_CEL_DESTINATARIO,
 			   P_ID_MERCANCIA,
 			   P_NUMERO_ENVIO,
 			   P_DOCUMENTO,
 			   P_ID_ESTADO;
	
END insertar_despacho;

/**
* OBTIENE LOS DEPACHOS ASOCIADOS A LOS PARÁMETROS DOCUMENTO DEL REMITENTE Y EL NÚMERO DE ENVÍO
*/
PROCEDURE getDespachos(P_DOCUMENTO IN NUMBER DEFAULT NULL,
					   P_NUMERO_ENVIO IN VARCHAR2 DEFAULT NULL,
					   P_DESPACHOS OUT SYS_REFCURSOR) 
IS
 v_despachos_cursor SYS_REFCURSOR;
BEGIN

	OPEN v_despachos_cursor FOR
	select D.* from DESPACHO D
	JOIN  ENVIO E ON  D.NUMERO_ENVIO = E.NUMERO_ENVIO
	WHERE D.NUMERO_ENVIO = NVL(P_NUMERO_ENVIO, D.NUMERO_ENVIO)
	AND DOCUMENTO_REMITENTE = NVL(P_DOCUMENTO, DOCUMENTO_REMITENTE);

	P_DESPACHOS := v_despachos_cursor;

END getDespachos;

/**
* OBTIENE EL NOMBRE DE UN ID DE ESTADO
*/
PROCEDURE getEstado(P_ID_ESTADO IN NUMBER, P_NOMBRE_ESTADO OUT VARCHAR2)
IS
 v_registro_cursor SYS_REFCURSOR;

BEGIN

	OPEN v_registro_cursor FOR
	select e.NOMBRE from ESTADO E
	WHERE E.ID_ESTADO = P_ID_ESTADO;
	
	FETCH v_registro_cursor INTO P_NOMBRE_ESTADO;

END getEstado;

/**
* OBTIENE TODOS LOS ESTADOS DE LA TABLA ESTADOS
*/
PROCEDURE getEstados(P_ESTADOS OUT SYS_REFCURSOR)
IS
 v_registros_cursor SYS_REFCURSOR;

BEGIN

	OPEN v_registros_cursor FOR
	select e.ID_ESTADO, e.NOMBRE from ESTADO E;
	
	P_ESTADOS := v_registros_cursor;

END getEstados;

-- Package body
END PCK_CRUD_TCC;